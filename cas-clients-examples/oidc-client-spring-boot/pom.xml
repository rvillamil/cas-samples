<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>samples.cas.client</groupId>
	<artifactId>oidc-client-spring-boot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>oidc-client-spring-boot</name>
	<description>OpenID Connect application protected</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.1.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<!-- General properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>8</java.version>
		<maven.compiler.version>3.6.3</maven.compiler.version>

		<!-- Testing and QA -->
		<maven.surefire.version>2.18.1</maven.surefire.version>
		<jacoco.version>0.8.3</jacoco.version>
		<jacoco.it.execution.data.file>${project.basedir}/target/jacoco-it.exec</jacoco.it.execution.data.file>
		<jacoco.ut.execution.data.file>${project.basedir}/target/jacoco.exec</jacoco.ut.execution.data.file>
		<excluded.test.primary.expresion>samples.cas.**.*IT</excluded.test.primary.expresion>
		<excluded.test.secundary.expresion>samples.cas.**.*IntegrationTest</excluded.test.secundary.expresion>
		<tests.integration.primary.expresion>**/*IT.java</tests.integration.primary.expresion>
		<tests.integration.secundary.expresion>**/*IntegrationTest.java</tests.integration.secundary.expresion>
		<skip.unit.tests>false</skip.unit.tests>
		<skip.integration.tests>true</skip.integration.tests>
		<pitest.version>1.4.3</pitest.version>
		<pitest.classes.expresion>samples.cas.*</pitest.classes.expresion>
		<pitest.skip>false</pitest.skip>
		<cyclonedx.version>1.3.1</cyclonedx.version>
		<openapi.file.path>${project.basedir}/src/main/resources/openapi.yaml</openapi.file.path>
	
		<!-- Libraries -->
		<jackson.databind.nullable.version>0.2.1</jackson.databind.nullable.version>
		<springfox.version>2.6.1</springfox.version>
		<springdoc.openapi.version>1.1.44</springdoc.openapi.version>
	</properties>

	<profiles>
		<!-- -P development -->
		<profile>
			<id>development</id>
			<properties>
				<environment.profile>development</environment.profile>
				<environment.name>Entorno desarrollo</environment.name>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

		</profile>
		<!-- -P preproduction -->
		<profile>
			<id>preproduction</id>
			<properties>
				<environment.profile>preproduction</environment.profile>
				<environment.name>Preproduccion</environment.name>
				<skip.integration.tests>false</skip.integration.tests>
				<pitest.skip>false</pitest.skip>
			</properties>
		</profile>
		<!-- -P production -->
		<profile>
			<id>production</id>
			<properties>
				<environment.profile>production</environment.profile>
				<environment.name>Produccion</environment.name>
				<skip.integration.tests>false</skip.integration.tests>
				<pitest.skip>false</pitest.skip>
			</properties>
		</profile>

	</profiles>

	<dependencies>
		<!-- Persistence: H2 In Memory database -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<!-- Persistence: flywaydb -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<!-- Persistence: JPA support -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Swaggger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc.openapi.version}</version>
		</dependency>

		<!-- Log4j -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<!-- Actuator, Prometheus, Micrometer -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<!-- OpenAPI Generator: https://openapi-generator.tech/ - JSON processing: 
			jackson (Version administrada por spring-boot) -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>${jackson.databind.nullable.version}</version>
		</dependency>

        <!-- The starter artifact aggregates all Spring Security
         Client-related dependencies, including:
        the spring-security-oauth2-client dependency for OAuth 2.0 Login and Client functionality
        the JOSE library for JWT support  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>        
        </dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- maven compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<showWarnings>true</showWarnings>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- Spring boot maven plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- OpenAPI Generator: https://openapi-generator.tech/ - https://openapi-generator.tech/docs/generators/spring -->
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>4.2.2</version>
				<executions>
					<execution>
						<id>billboard</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${openapi.file.path}</inputSpec>
							<generatorName>spring</generatorName>
							<apiPackage>${project.groupId}.api</apiPackage>
							<modelPackage>${project.groupId}.model</modelPackage>
							<modelNameSuffix>Dto</modelNameSuffix>

							<configOptions>
								<dateLibrary>java8</dateLibrary>
								<library>spring-boot</library>
								<java8>true</java8>
								<interfaceOnly>true</interfaceOnly>
							</configOptions>

						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- QA: pitest -->
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>${pitest.version}</version>
				<configuration>
					<targetClasses>
						<param>${pitest.classes.expresion}</param>
					</targetClasses>
					<jvmArgs>
						<value>-Duser.language=${test.integration.language}
							-Duser.region={test.integration.region}</value>
					</jvmArgs>
					<outputFormats>
						<outputFormat>XML</outputFormat>
						<outputFormat>HTML</outputFormat>
					</outputFormats>
					<excludedTestClasses>
						<param>${excluded.test.primary.expresion}</param>
						<param>${excluded.test.secundary.expresion}</param>
					</excludedTestClasses>
					<timestampedReports>true</timestampedReports>
					<skip>${pitest.skip}</skip>
				</configuration>
			</plugin>

			<!-- QA:Jacoco -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.ut.execution.data.file}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.ut.execution.data.file}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Failsafe plugin is executed. -->
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.it.execution.data.file}</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for integration tests after 
						integration tests have been run. -->
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${jacoco.it.execution.data.file}</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- QA: Used for unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>${maven.surefire.version}</version>
					</dependency>
				</dependencies>

				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}
						${surefireArgLine}
					</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>${tests.integration.primary.expresion}</exclude>
						<exclude>${tests.integration.secundary.expresion}</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- QA: Used for integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<!-- Ensures that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>${failsafeArgLine}</argLine>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
							<includes>
								<include>${tests.integration.primary.expresion}</include>
								<include>${tests.integration.secundary.expresion}</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- QA: Cyclonedx -->
			<plugin>
				<groupId>org.cyclonedx</groupId>
				<artifactId>cyclonedx-maven-plugin</artifactId>
				<version>${cyclonedx.version}</version>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven.project.info.reports.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.2</version>
				<reportSets>
					<reportSet>
						<id>html</id>
						<configuration>
							<!-- default value is http://localhost:9000 -->
							<doctitle>API for ${project.name} ${project.version}</doctitle>
							<windowtitle>API for ${project.name} ${project.version}</windowtitle>
						</configuration>
						<reports>
							<report>javadoc</report>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.reports.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>report-only</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
			</plugin>
		</plugins>
	</reporting>

</project>
