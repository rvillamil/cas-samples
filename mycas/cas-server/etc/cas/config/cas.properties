# ========================== Minimal Configuration  ===========================
#
#
# == Connect to a CAS server for authentication ==
#
# Identify the CAS server. name and prefix are always required settings.
# A CAS host is automatically appended to the ticket ids generated
# by CAS. If none is specified, one is automatically detected and used by CAS.
#
cas.server.name=https://mycas.localhost.local:9443
cas.server.prefix=${cas.server.name}/cas
#cas.server.port=9443

# 
# Desplegamos detras de un proxy http (Nginx Ingress)
#
# https://apereo.github.io/2018/01/05/cas-deployment-with-proxy/
#
# server.tomcat.remoteip.protocol-header-https-value=http # https://fawnoos.com/2020/05/26/cas62x-docker-nginx-proxy/
# server.port=8080
# server.ssl.enabled=false
# cas.server.tomcat.http.enabled=false
# cas.server.tomcat.http-proxy.enabled=true
# cas.server.tomcat.http-proxy.secure=true
# cas.server.tomcat.http-proxy.scheme=https
# cas.server.tomcat.http-proxy.protocol=HTTP/1.1


#
# == Configure logging settings ==
#
# @see https://goo.gl/9kJtZm
#
logging.config=file:/etc/cas/config/log4j2.xml

#
# == CORS ==
# 
cas.http-web-request.cors.enabled=true
cas.httpWebRequest.cors.allowOrigins[0]=*

# cas.authn.accept.users=

#
# ========================== Service Registry ==================================
#
# = JSON Service Registry ==
#
# JSON fileName = serviceName + "-" + serviceNumericId + ".json"
#cas.service-registry.init-from-json=false
cas.service-registry.json.location=file:/etc/cas/services

#
# ========================== OpenID Connect ====================================
#
cas.authn.oidc.issuer=${cas.server.prefix}/oidc
#cas.authn.oidc.jwksFile=file:/etc/cas/oidc/keystore.jwks
cas.authn.oidc.scopes=openid
cas.authn.oidc.claims=groups
#cas.authn.oidc.userDefinedScopes.profile_rodrigo=mail,firstname,username

#
# ========================== Monitoring ========================================
#
# = Configure admin pages properties

# Since we will NOT be using the Spring Boot Administration server in our
# deployment, the distinction is somewhat unimportant
#
# This will enable both the CAS-style endpoints and the Spring Boot-style
# endpoints.
# if an endpoint is marked 'sensitive' then Spring Security will be used to
# control access to it.
# If the endpoint is not marked \u201Csensitive\u201D then CAS will be used
# to secure it. Since we want to use the CAS server to secure all
# the endpoints, add the following properties:
#management.endpoints.web.base-path=/actuator
#management.endpoints.web.exposure.include=status
#management.endpoint.status.enabled=true

#cas.monitor.endpoints.endpoint.status.access=IP_ADDRESS
#cas.monitor.endpoints.endpoint.status.required-ip-addresses=127.0.0.1
