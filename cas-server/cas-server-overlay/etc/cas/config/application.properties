

# -----------------------------------------------------------------------
# OAuth/OpenId
#
# Allow CAS to act as an OAuth/OpenID authentication provider
# https://apereo.github.io/cas/5.2.x/protocol/OAuth-Protocol.html
# https://apereo.github.io/cas/development/installation/OAuth-OpenId-Authentication.html
#
# TODO


# -----------------------------------------------------------------------
# SAML2 as Identity Provider
#
# CAS can act as a SAML2 identity provider accepting authentication requests and producing SAML assertions
# https://apereo.github.io/cas/development/installation/Configuring-SAML2-Authentication.html
#
# https://developer.okta.com/blog/2017/03/16/spring-boot-saml
#
# TODO
# spring.boot.admin.url=https://bootadmin.example.org:8444
# spring.boot.admin.client.managementUrl=${cas.server.prefix}/status
# spring.boot.admin.client.name=Apereo CAS
# spring.boot.admin.client.metadata.user.name=
# spring.boot.admin.client.metadata.user.password=


# -----------------------------------------------------------------------
#
# Delegated Authentication
#
# CAS can act as a client using the pac4j security engine and delegate the authentication to:
#
# - CAS servers
# - SAML2 identity providers
# - OAuth2 providers such as Facebook, Twitter, Google, LinkedIn, Yahoo, etc
# - OpenID providers
# - OpenID Connect identity providers
# - ADFS
#
# https://apereo.github.io/cas/development/integration/Delegate-Authentication.html
#
# TODO
